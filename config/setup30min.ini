[globalOptions]

# Set the input directory map in an absolute path. 
# - The input forcing and parameter directories will be relative to this.
inputDir = /media/sf_eWaterCycle/localData/input30min/

# Set the output directory in an absolute path.
outputDir = /media/sf_eWaterCycle/localData/output/
cleanOutputDir = False
# Output in PCR and NC  will be written to (relative to outputDir):
outputMapDir = maps/
outputNCDir = netcdf/
#
# Temporary folder (relative to outputDir):
tmpDir = tmp/
#
# The directory for the log file is generated in the following directory (relative to outputDir): 
logFileDir = log/
cleanLogDir = True

# The python scripts used will be also copied to the following directory (relative to outputDir): 
backupScriptDir = scripts/

debugWaterBalance = True

# netcdf attributes for output files:
institution = DFG Utrecht University ; NleSC Amsterdam ; Water Management TU Delft
title = eWaterCycle model output
description = test version (by Rolf Hut bwaHAHAHAHA) 

startTime = 2001-01-01
endTime = 2001-03-01
# Format: YYYY-MM-DD
timeStep = 1.0
timeStepUnit = day 
# PS: The current model still runs of the daily time step.

# Map of clone (must be provided in PCRaster maps)
# - Spatial	resolution and coverage are based on this map:
cloneMap = cloneMaps/Global_CloneMap_30min.map
#~ cloneMap = cloneMaps/Nile30min.map
#~ cloneMap = cloneMaps/RhineMeuse30min.map
#~ cloneMap = cloneMaps/small30min.map

# The area/landmask of interest:
landmask = None
# If None, area/landmask is limited for cells with ldd value. 

# spinning up options: 
# Note: for the purpose of DA, there should be no SpinUp 
maxSpinUpsInYears = 0
minConvForTotlSto = 0.5
minConvForSoilSto = 0.5
minConvForGwatSto = 0.5
minConvForChanSto = 0.5

# The end model states after every (spinUp or real run) cycle will be
# saved into the following directory (if defined). 
# - The directory is relative to outputDir and teh end states will be 
#   saved as PCRaster maps. 
endStateDir = states/
cleanEndStateDir = True

[meteoOptions]

# Set the forcing temperature file(s) (relative to inputDir)
temperatureNC = forcing/ERA-Interim-GPCPCorrected/temperature_ERA_Interim_2000to2010.nc
# If NC file is not provided, please provide the PCRaster files.
# The input files are on daily basis, with a time stamp date = YYYY-MM-DD
# Convention for the file name: temperatureFileName + date + temperatureExt
# Example (fullname): meteo/MeanAirTemperature/ERA-Interim/Global_MeanAirTemperature_ERA-Interim_1979-01-01_30min.map 
temperatureFileName = None
temperatureExt = None

# Set the forcing precipitation file(s) (relative to inputDir)
precipitationNC = forcing/ERA-Interim-GPCPCorrected/precipitation_ERA_Interim_GPCPCorrected_2000to2010.nc
# If NC file is not provided, please provide the PCRaster files (relative to precipitationDir).
# The input files are on daily basis, with a time stamp date = YYYY-MM-DD
# Convention for the file name: precipitationFileName + date + precipitationExt
# Example (fullname)  : meteo/Precipitation/ERA-Interim-GPCPCorrected/Global_Precipitation_ERA-Interim-GPCPCorrected_1979-01-01_30min.map 
precipitationFileName = None
precipitationExt = None

# Method to calculate referencePotETP (reference potential evaporation+transpiration)
referenceETPotMethod = Hamon
# options are "Hamon" and "Input"
# If "Input", the netcdf input file must be given:
refETPotFileNC = None

# output files that will be written in the disk:
# in netcdf files:
outDailyTotNC = None	
outMonthTotNC = None
outMonthAvgNC = None
outMonthEndNC = None
outAnnuaTotNC = None
outAnnuaAvgNC = None
outAnnuaEndNC = None

# This option is still under development.
nielsMethod = False

[landSurfaceOptions]

debugWaterBalance = True

topographyNC = None
# If topographyNC (netCDF format) is not defined, we use the following PCRaster maps:
#-maps of relative elevation above floodplain, in percent (relative to mapDirectory)
dzRel0001 = landSurface/topo/hydro1k_dzrel0001.map			
dzRel0005 = landSurface/topo/hydro1k_dzrel0005.map
dzRel0010 = landSurface/topo/hydro1k_dzrel0010.map
dzRel0020 = landSurface/topo/hydro1k_dzrel0020.map
dzRel0030 = landSurface/topo/hydro1k_dzrel0030.map
dzRel0040 = landSurface/topo/hydro1k_dzrel0040.map
dzRel0050 = landSurface/topo/hydro1k_dzrel0050.map
dzRel0060 = landSurface/topo/hydro1k_dzrel0060.map
dzRel0070 = landSurface/topo/hydro1k_dzrel0070.map
dzRel0080 = landSurface/topo/hydro1k_dzrel0080.map
dzRel0090 = landSurface/topo/hydro1k_dzrel0090.map
dzREL0100 = landSurface/topo/hydro1k_dzrel0100.map
#-other (global) maps:
tanslope      = landSurface/topo/globalgradslope.map
slopeLength   = landSurface/topo/globalbcat.map
orographyBeta = landSurface/topo/globalboro.map

soilPropertiesNC = None
# If soilPropertiesNC (netCDF format) is not defined, we use the following PCRaster maps:
airEntryValue1       = landSurface/soil/fao30_psis30.map
airEntryValue2       = landSurface/soil/fao30_psis100.map
KSat1                = landSurface/soil/fao30_ks30.map
KSat2                = landSurface/soil/fao30_ks100.map
poreSizeBeta1        = landSurface/soil/fao30_beta30.map
poreSizeBeta2        = landSurface/soil/fao30_beta100.map
firstStorDepth       = landSurface/soil/fao30_z1_permafrost.map
secondStorDepth      = landSurface/soil/fao30_z2_permafrost.map
soilWaterStorageCap1 = landSurface/soil/fao30_sc1_permafrost.map
soilWaterStorageCap2 = landSurface/soil/fao30_sc2_permafrost.map
resVolWC1            = landSurface/soil/fao30_thr30.map
resVolWC2            = landSurface/soil/fao30_thr100.map
satVolWC1            = landSurface/soil/fao30_ths30.map
satVolWC2            = landSurface/soil/fao30_ths100.map
clappAddCoeff        = 3.0
matricSuctionFC      = 1.
matricSuction50      = 3.33
matricSuctionWP      = 156.0
maxGWCapRise         = 5.0
minInterceptCap      = 0.001
percolationImp       = landSurface/soil/fao30_p2imp_permafrost.map
#
landCoverTypes = forest,grassland,irrPaddy,irrNonPaddy
#~ landCoverTypes = forest,grassland

limitIrrigation = True

# output files that will be written in the disk:
# in netcdf files:
# ROLF: all output: outDailyTotNC = snowCoverSWE,storUpp000005,storUpp005030,storLow030150,satDegUpp000005,satDegUpp005030,satDegLow030150
#outDailyTotNC = None
#outMonthTotNC = actualET
#outMonthAvgNC = infiltration,directRunoff,interflowTotal,gwRecharge,actTranspiTotal,actTranspiUpp,actBareSoilEvap,actTranspiLow030150
#outMonthEndNC = satDegUpp000005,topWaterLayer,interceptStor
#outAnnuaTotNC = actualET
#outAnnuaAvgNC = directRunoff,interflowTotal,gwRecharge
#outAnnuaEndNC = None
outDailyTotNC = None
outMonthTotNC = None
outMonthAvgNC = None
outMonthEndNC = None
outAnnuaTotNC = None
outAnnuaAvgNC = None
outAnnuaEndNC = None

[forestOptions]

name = forest
debugWaterBalance = True

# snow module properties
snowModuleType      =  Simple
freezingT           = -0.0
degreeDayFactor     =  0.0025
snowFallCorrFactor  =  1.0
snowWaterHoldingCap =  0.1
refreezingCoeff     =  0.05
#
landCoverMapsNC = None
#
# If NC file is not provided, we have to provide the following values:
fracVegCover     = landCover/forest/vegf_tall.map
minSoilDepthFrac = landCover/forest/minf_tall_permafrost.map
maxSoilDepthFrac = landCover/forest/maxf_tall.map
rootFraction1    = landCover/forest/rfrac1_tall.map
rootFraction2    = landCover/forest/rfrac2_tall.map
maxRootDepth     = landCover/forest/fao_root_tall.map
#
# other paramater values
minTopWaterLayer = 0.0
minCropKC        = 0.2
minInterceptCap  = 0.001

cropCoefficientNC = landCover/forest/Global_CropCoefficientKc-Forest_30min.nc
# If NC file is not provided, please provide the PCRaster files.
# The input files are on daily basis, with a time stamp date = 0000-MM-DD
# Note: The year 0000 indicates that the seasonal cycle is the same for every year.
# Convention for the file name: FileName + date + Ext
# Example (fullname): landCover/forest/Global_CropCoefficientKc-Forest_0000-01-01_30min.map 
cropCoefficientFileName = None
cropCoefficientExt = None

interceptCapNC = landCover/forest/interceptCapInputForest366days.nc
# If NC file is not provided, please provide the PCRaster files.
# The input files are on daily basis, with a time stamp date = 0000-MM-DD
# Note: The year 0000 indicates that the seasonal cycle is the same for every year.
# Convention for the file name: FileName + date + Ext
# Example (full name): landCover/forest/interceptionCapacityTSS/Global_InterceptCapacity-Forest_0000-01-01_30min.map
# interceptCapFileName = landCover/forest/interceptionCapacityTSS/Global_InterceptCapacity-Forest_0000
# interceptCapExt = _30min.map
interceptCapFileName = None
interceptCapExt = None

coverFractionNC = landCover/forest/coverFractionInputForest366days.nc
# If NC file is not provided, please provide the PCRaster files.
# The input files are on daily basis, with a time stamp date = 0000-MM-DD
# Note: The year 0000 indicates that the seasonal cycle is the same for every year.
# Convention for the file name: FileName + date + Ext
# Example (full name): landCover/forest/coverFractionTSS/Global_CoverFraction-Forest_0000-01-01_30min.map
# coverFractionFileName = landCover/forest/coverFractionTSS/Global_CoverFraction-Forest_0000
# coverFractionExt = _30min.map
coverFractionFileName = None
coverFractionExt = None

# initial conditions:
interceptStorIni = initialConditions/threeLayersForYear2000_v08Oct2013/interceptStorIni_forest_2000-12-31.map
snowCoverSWEIni  = initialConditions/threeLayersForYear2000_v08Oct2013/snowCoverSWEIni_forest_2000-12-31.map
snowFreeWaterIni = initialConditions/threeLayersForYear2000_v08Oct2013/snowFreeWaterIni_forest_2000-12-31.map
topWaterLayerIni = initialConditions/threeLayersForYear2000_v08Oct2013/topWaterLayerIni_forest_2000-12-31.map
storUpp000005Ini = initialConditions/threeLayersForYear2000_v08Oct2013/storUpp000005Ini_forest_2000-12-31.map
storUpp005030Ini = initialConditions/threeLayersForYear2000_v08Oct2013/storUpp005030Ini_forest_2000-12-31.map
storLow030150Ini = initialConditions/threeLayersForYear2000_v08Oct2013/storLow030150Ini_forest_2000-12-31.map
interflowIni     = initialConditions/threeLayersForYear2000_v08Oct2013/interflowIni_forest_2000-12-31.map

# output files that will be written in the disk:
# in netcdf files:
#outDailyTotNC  = None
#outMonthTotNC  = actualET
#outMonthAvgNC  = None
#outMonthEndNC  = None
outDailyTotNC  = None
outMonthTotNC  = None
outMonthAvgNC  = None
outMonthEndNC  = None

[grasslandOptions]

name = grassland
debugWaterBalance = True

# snow module properties
snowModuleType      =  Simple
freezingT           = -0.0
degreeDayFactor     =  0.0025
snowFallCorrFactor  =  1.0
snowWaterHoldingCap =  0.1
refreezingCoeff     =  0.05
#
landCoverMapsNC = None
#
# If NC file is not provided, we have to provide the following values:
fracVegCover      = landCover/grassland/vegf_short.map
minSoilDepthFrac  = landCover/grassland/minf_short_permafrost.map
maxSoilDepthFrac  = landCover/grassland/maxf_short.map
rootFraction1     = landCover/grassland/rfrac1_short.map
rootFraction2     = landCover/grassland/rfrac2_short.map
maxRootDepth      = landCover/grassland/fao_root_short.map
#
# other paramater values
minTopWaterLayer = 0.0
minCropKC        = 0.2
minInterceptCap  = 0.001

cropCoefficientNC = landCover/grassland/Global_CropCoefficientKc-Grassland_30min.nc
# If NC file is not provided, please provide the PCRaster files.
# The input files are on daily basis, with a time stamp date = 0000-MM-DD
# Note: The year 0000 indicates that the seasonal cycle is the same for every year.
# Convention for the file name: FileName + date + Ext
# Example (fullname): landCover/grassland/Global_CropCoefficientKc-Grassland_0000-01-01_30min.map 
cropCoefficientFileName = None
cropCoefficientExt = None

interceptCapNC = landCover/grassland/interceptCapInputGrassland366days.nc
# If NC file is not provided, please provide the PCRaster files.
# The input files are on daily basis, with a time stamp date = 0000-MM-DD
# Note: The year 0000 indicates that the seasonal cycle is the same for every year.
# Convention for the file name: FileName + date + Ext
# Example (full name): landCover/grassland/interceptionCapacityTSS/Global_InterceptCapacity-Grassland_0000-01-01_30min.map
interceptCapFileName = None
interceptCapExt = None

coverFractionNC = landCover/grassland/coverFractionInputGrassland366days.nc
# If NC file is not provided, please provide the PCRaster files.
# The input files are on daily basis, with a time stamp date = 0000-MM-DD
# Note: The year 0000 indicates that the seasonal cycle is the same for every year.
# Convention for the file name: FileName + date + Ext
# Example (full name): landCover/grassland/coverFractionTSS/Global_CoverFraction-Grassland_0000-01-01_30min.map
coverFractionFileName = None
coverFractionExt = None

# initial conditions:
interceptStorIni  = initialConditions/threeLayersForYear2000_v08Oct2013/interceptStorIni_grassland_2000-12-31.map
snowCoverSWEIni   = initialConditions/threeLayersForYear2000_v08Oct2013/snowCoverSWEIni_grassland_2000-12-31.map
snowFreeWaterIni  = initialConditions/threeLayersForYear2000_v08Oct2013/snowFreeWaterIni_grassland_2000-12-31.map
topWaterLayerIni  = initialConditions/threeLayersForYear2000_v08Oct2013/topWaterLayerIni_grassland_2000-12-31.map
storUpp000005Ini  = initialConditions/threeLayersForYear2000_v08Oct2013/storUpp000005Ini_grassland_2000-12-31.map
storUpp005030Ini  = initialConditions/threeLayersForYear2000_v08Oct2013/storUpp005030Ini_grassland_2000-12-31.map
storLow030150Ini  = initialConditions/threeLayersForYear2000_v08Oct2013/storLow030150Ini_grassland_2000-12-31.map
interflowIni      = initialConditions/threeLayersForYear2000_v08Oct2013/interflowIni_grassland_2000-12-31.map

# output files that will be written in the disk:
# in netcdf files:
#outDailyTotNC  = None
#outMonthTotNC  = actualET
#outMonthAvgNC  = None
#outMonthEndNC  = None
outDailyTotNC  = None
outMonthTotNC  = None
outMonthAvgNC  = None
outMonthEndNC  = None


[irrPaddyOptions]

name = irrPaddy
debugWaterBalance = True

# snow module properties
snowModuleType      =  Simple
freezingT           = -0.0
degreeDayFactor     =  0.0025
snowFallCorrFactor  =  1.0
snowWaterHoldingCap =  0.1
refreezingCoeff     =  0.05
#
landCoverMapsNC = None
#
# If NC file is not provided, we have to provide the following values:
fracVegCover     = landCover/irrPaddy/vegf_paddy.map
minSoilDepthFrac = landCover/irrPaddy/minf_paddy_permafrost.map
maxSoilDepthFrac = landCover/irrPaddy/maxf_paddy.map
rootFraction1    = landCover/irrPaddy/rfrac1_paddy.map
rootFraction2    = landCover/irrPaddy/rfrac2_paddy.map
maxRootDepth     = 0.5
#
# other paramater values
minTopWaterLayer = 0.05
minCropKC        = 0.2
minInterceptCap  = 0.001
cropDeplFactor   = 0.2

cropCoefficientNC = landCover/irrPaddy/Global_CropCoefficientKc-IrrPaddy_30min.nc
# If NC file is not provided, please provide the PCRaster files.
# The input files are on daily basis, with a time stamp date = 0000-MM-DD
# Note: The year 0000 indicates that the seasonal cycle is the same for every year.
# Convention for the file name: FileName + date + Ext
# Example (fullname): landCover/grassland/Global_CropCoefficientKc-Grassland_0000-01-01_30min.map 
cropCoefficientFileName = None
cropCoefficientExt = None

# initial conditions:
interceptStorIni  = initialConditions/threeLayersForYear2000_v08Oct2013/interceptStorIni_irrPaddy_2000-12-31.map
snowCoverSWEIni   = initialConditions/threeLayersForYear2000_v08Oct2013/snowCoverSWEIni_irrPaddy_2000-12-31.map
snowFreeWaterIni  = initialConditions/threeLayersForYear2000_v08Oct2013/snowFreeWaterIni_irrPaddy_2000-12-31.map
topWaterLayerIni  = initialConditions/threeLayersForYear2000_v08Oct2013/topWaterLayerIni_irrPaddy_2000-12-31.map
storUpp000005Ini  = initialConditions/threeLayersForYear2000_v08Oct2013/storUpp000005Ini_irrPaddy_2000-12-31.map
storUpp005030Ini  = initialConditions/threeLayersForYear2000_v08Oct2013/storUpp005030Ini_irrPaddy_2000-12-31.map
storLow030150Ini  = initialConditions/threeLayersForYear2000_v08Oct2013/storLow030150Ini_irrPaddy_2000-12-31.map
interflowIni      = initialConditions/threeLayersForYear2000_v08Oct2013/interflowIni_irrPaddy_2000-12-31.map

# output files that will be written in the disk:
# in netcdf files:
#outDailyTotNC  = None
#outMonthTotNC  = actualET
#outMonthAvgNC  = None
#outMonthEndNC  = None
outDailyTotNC  = None
outMonthTotNC  = None
outMonthAvgNC  = None
outMonthEndNC  = None


[irrNonPaddyOptions]

name = irrNonPaddy
debugWaterBalance = True

# snow module properties
snowModuleType      =  Simple
freezingT           = -0.0
degreeDayFactor     =  0.0025
snowFallCorrFactor  =  1.0
snowWaterHoldingCap =  0.1
refreezingCoeff     =  0.05
#
landCoverMapsNC = None
#
# If NC file is not provided, we have to provide the following values:
fracVegCover     = landCover/irrNonPaddy/vegf_nonpaddy.map
minSoilDepthFrac = landCover/irrNonPaddy/minf_nonpaddy_permafrost.map
maxSoilDepthFrac = landCover/irrNonPaddy/maxf_nonpaddy.map
rootFraction1    = landCover/irrNonPaddy/rfrac1_nonpaddy.map
rootFraction2    = landCover/irrNonPaddy/rfrac2_nonpaddy.map
maxRootDepth     = 1.0
# source: /scratch/edwin/INPUT_22FEB2013/PCRarchive/NewLCParameters/
#
# other paramater values
minTopWaterLayer = 0.0
minCropKC        = 0.2
minInterceptCap  = 0.001
cropDeplFactor   = 0.5

cropCoefficientNC = landCover/irrNonPaddy/Global_CropCoefficientKc-IrrNonPaddy_30min.nc
# If NC file is not provided, please provide the PCRaster files.
# The input files are on daily basis, with a time stamp date = 0000-MM-DD
# Note: The year 0000 indicates that the seasonal cycle is the same for every year.
# Convention for the file name: FileName + date + Ext
# Example (fullname): landCover/grassland/Global_CropCoefficientKc-Grassland_0000-01-01_30min.map 
cropCoefficientFileName = None
cropCoefficientExt = None

# initial conditions:
interceptStorIni  = initialConditions/threeLayersForYear2000_v08Oct2013/interceptStorIni_irrNonPaddy_2000-12-31.map
snowCoverSWEIni   = initialConditions/threeLayersForYear2000_v08Oct2013/snowCoverSWEIni_irrNonPaddy_2000-12-31.map
snowFreeWaterIni  = initialConditions/threeLayersForYear2000_v08Oct2013/snowFreeWaterIni_irrNonPaddy_2000-12-31.map
topWaterLayerIni  = initialConditions/threeLayersForYear2000_v08Oct2013/topWaterLayerIni_irrNonPaddy_2000-12-31.map
storUpp000005Ini  = initialConditions/threeLayersForYear2000_v08Oct2013/storUpp000005Ini_irrNonPaddy_2000-12-31.map
storUpp005030Ini  = initialConditions/threeLayersForYear2000_v08Oct2013/storUpp005030Ini_irrNonPaddy_2000-12-31.map
storLow030150Ini  = initialConditions/threeLayersForYear2000_v08Oct2013/storLow030150Ini_irrNonPaddy_2000-12-31.map
interflowIni      = initialConditions/threeLayersForYear2000_v08Oct2013/interflowIni_irrNonPaddy_2000-12-31.map

# output files that will be written in the disk:
# in netcdf files:
#outDailyTotNC  = None
#outMonthTotNC  = actualET
#outMonthAvgNC  = None
#outMonthEndNC  = None
outDailyTotNC  = None
outMonthTotNC  = None
outMonthAvgNC  = None
outMonthEndNC  = None

[groundwaterOptions]

debugWaterBalance = True

recessionCoeff     = groundwater/globalalpha.map 
storGroundwaterIni = initialConditions/threeLayersForYear2000_v08Oct2013/storGroundwaterIni_2000-12-31.map

# output files that will be written in the disk:
# in netcdf files:
#outDailyTotNC  = None
#outMonthTotNC  = None
#outMonthAvgNC  = baseflow
#outMonthEndNC  = storGroundwater
#outAnnuaTotNC  = None
#outAnnuaAvgNC  = baseflow
#outAnnuaEndNC  = storGroundwater
outDailyTotNC  = None
outMonthTotNC  = None
outMonthAvgNC  = None
outMonthEndNC  = None
outAnnuaTotNC  = None
outAnnuaAvgNC  = None
outAnnuaEndNC  = None
        
[routingOptions]

debugWaterBalance = True

lddMap = routing/reservoirs/fromRensJune2013/reservoirparameterization/lddsound_30min.map
cellAreaMap = routing/cellarea30min.map

routingMethod = accuTravelTime
# options are : accumulation and accuTravelTime  
# TODO: kinematicWave

# flow length for every cell (in meter)
# - if None, it will be approximated by cell diagonal length
cellLengthFD  = None

# channel gradient (dimensionless)
gradient    = routing/Global_ChannelGradient-RVB_30min.map
minGradient = 0.000005

eta = 0.25
nu  = 0.40
tau = 8.00
phi = 0.58
manningsN = 0.04

includeWaterBodies = True
# if includeWaterBodies = False, fracWat = 0 for all cells
fracWaterInp = routing/reservoirs/fromRensJune2013/reservoirparameterization/fracwat_
waterBodyIds = routing/reservoirs/fromRensJune2013/reservoirparameterization/waterbodyid_

waterBodyTyp = routing/reservoirs/fromRensJune2013/reservoirparameterization/waterbodytype_
# type 1 = lake ; type 2 = reservoir

includeLakes = True
# if includeLakes = False, storage changes in all water bodies will be released as local runoff (e.g. wetland, not using weirFormula).
# if includeLakes = True, weirFormula will be used.

includeReservoirs = True
# if includeReservoirs = True, waterbodies that have reservoirs type will be regulated.
# if includeReservoirs = False and includeLakes = True, weirFormula will also be used for reservoirs.
# if includeReservoirs = True, but includeLakes = False, all "lakes" and "reservoirs" behave as regulated reservoirs. 

resMaxCapInp = routing/reservoirs/fromRensJune2013/reservoirparameterization/reservoircapacity_
# unit: 10^6 m3

resSfAreaInp = routing/reservoirs/fromRensJune2013/reservoirparameterization/reservoirarea_
# unit: 10^6 m2

# minimum area of reservoir (in m2) for a waterBody to behave as "reservoirs/lakes"  
minResvrArea = 0.

# lower limit at which reservoir release is terminated
minResvrFrac = 0.1
# upper limit at which reservoir release is equal to long-term averaged 
maxResvrFrac = 0.75

minWeirWidth = 10.
# TODO: define minWeirWidth based on the GRanD database 

#~ waterBodyOut = routing/reservoirs/fromRensJune2013/reservoirparameterization/waterbodyidoutlet_
waterBodyOut = None
# if waterBodyOut = None, outlets of waterbodies will be determined atutomatically based on ldd.

# composite crop factors for WaterBodies (i.e. channels and wetlands or lakes/reservoirs)
#~ cropCoefficientWaterNC       = # still need to be developed (We can copy it from Inge's folder (at swift.geo.uu.nl): /home/inge/PCR/data/maps)
# If NC file is not provided, please provide the PCRaster files.
# The input files are on daily basis, with a time stamp date = 0000-MM-DD
# Note: The year 0000 indicates that the seasonal cycle is the same for every year.
# Convention for the file name: FileName + date + Ext
# Example (fullname):    routing/WaterBodies/Global_CropCoefficientKc-Water_0000-01-01_30min.map 
cropCoefficientWaterFileName = None
cropCoefficientWaterExt      = None
# - default values (used if there are no PCRaster and NC files defined).
cropCoefficientWaterDefault = 1.0

# initial conditions:
waterBodyStorageIni    = initialConditions/threeLayersForYear2000_v08Oct2013/waterBodyStorageIni_2000-12-31.map
channelStorageIni      = initialConditions/threeLayersForYear2000_v08Oct2013/channelStorageIni_2000-12-31.map
avgChannelDischargeIni = initialConditions/threeLayersForYear2000_v08Oct2013/avgDischargeIni_2000-12-31.map
avgOutflowDischargeIni = initialConditions/threeLayersForYear2000_v08Oct2013/avgOutflowIni_2000-12-31.map
avgInflowLakeReservIni = initialConditions/threeLayersForYear2000_v08Oct2013/avgInflowIni_2000-12-31.map

#
# number of days (timesteps) that have been performed for spinning up routing module (i.e. resvStorageIni, channelStorageIni and avgDischargeIni)
timestepsToAvgDischargeIni = initialConditions/threeLayersForYear2000_v08Oct2013/timestepsToAvgDischargeIni_2000-12-31.map
#
# maximum number of days (timesteps) to calculate long term average discharge (default: 5 years = 5 * 365 days = 1825)
maxTimestepsToAvgDischargeLongTerm = 1825.

# maximum number of days (timesteps) to calculate short term average inflow (default: 1 month = 1 * 30 days = 30)
maxTimestepsToAvgDischargeShorTerm = 30.

# output files that will be written in the disk:
# in netcdf files:
#outDailyTotNC  = None
#outMonthTotNC  = None
#outMonthAvgNC  = discharge,runoffAll,disChanWaterBody
#outMonthEndNC  = channelStorage,waterBodyRelStor
#outAnnuaTotNC  = None
#outAnnuaAvgNC  = discharge,runoffAll,disChanWaterBody
#outAnnuaEndNC  = None
outDailyTotNC  = None
outMonthTotNC  = None
outMonthAvgNC  = None
outMonthEndNC  = None
outAnnuaTotNC  = None
outAnnuaAvgNC  = None
outAnnuaEndNC  = None
        
